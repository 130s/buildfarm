<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Generate status page for Hydro.&#xd;
&#xd;
Generated from buildfarm/resources/static_jobs. Do not edit on Jenkins but in the repository.</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>180</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.queueSorter.PrioritySorterJobProperty plugin="PrioritySorter@1.3">
      <priority>200</priority>
    </hudson.queueSorter.PrioritySorterJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name/>
        <refspec/>
        <url>git://github.com/ros-infrastructure/buildfarm.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir>monitored_vcs</relativeTargetDir>
    <reference/>
    <excludedRegions/>
    <excludedUsers/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <includedRegions/>
    <scmName/>
  </scm>
  <assignedNode>debbuild</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>*/15 * * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x

#stop on error
set -o errexit

export PYTHONPATH=$WORKSPACE/monitored_vcs

$WORKSPACE/monitored_vcs/scripts/generate_status_page.py hydro --basedir $WORKSPACE/hydro_apt_cache
scp -o StrictHostKeyChecking=no $WORKSPACE/hydro_apt_cache/hydro.* rosbot@ros.osuosl.org:/var/www/www.ros.org/debbuild/

$WORKSPACE/monitored_vcs/scripts/generate_status_page.py hydro --basedir $WORKSPACE/hydro_mirror_apt_cache --resources .. --shadow-repo http://packages.ros.org/ros-shadow-fixed/ubuntu/ --public-repo http://packages.ros.org/ros/ubuntu/
scp -o StrictHostKeyChecking=no $WORKSPACE/hydro_mirror_apt_cache/hydro.* rosbot@ros.osuosl.org:/var/www/www.ros.org/debbuild/mirror/</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/usr/bin/env python

# Fetch trace files from packages.ros.org mirrors
from urllib2 import urlopen
from dateutil import parser

verbose = False

repos = ['ros-ubuntu', 'ros-shadow-fixed']

filenames = ['repos.ros.org',
             'ftp-osl.osuosl.org',
             'ftp-nyc.osuosl.org',
             'ftp-chi.osuosl.org']


hosts = ['ftp-osl.osuosl.org',
         'ftp-chi.osuosl.org',
         'ftp-nyc.osuosl.org']

missing = []

trace_files = {}


def get_time_from_contents(contents):
    lines = contents.split('\n')
    if len(lines) > 0:
        datestr = lines[0]
        dateobj = parser.parse(datestr)
        return dateobj
    return None

for repo in repos:
    print "REPO %s " % repo
    print 'v'*80
    for host in hosts:
        print "HOST %s" % host
        for filename in filenames:
            path = 'http://%s/pub/%s/project/trace/%s' %\
                (host, repo, filename)
            try:
                contents = urlopen(path).read().decode('utf-8')
                padding = 20 - len(filename)
                print " %s %s @ %s" % (filename,
                                       ' ' * padding,
                                       get_time_from_contents(contents))
                trace_files[(host, repo, filename)] = contents
            except:
                missing.append((host, repo, filename))
    print '^'*80

if verbose:
    print "Did not find %s" % missing
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.4">
      <recipients>ros-buildfarm-status@googlegroups.com</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>
